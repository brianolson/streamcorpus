/**
 * generated by Scrooge 3.0.7-SNAPSHOT
 */
package streamcorpus

import com.twitter.scrooge.ThriftEnum

/**
 * Offset and OffsetType are used by Annotation to identify the
 * portion of a ContentItem that a human labeled with a tag.
 *
 * annotation applies to a range of line numbers
 *
 * annotation applies to a range of bytes
 *
 * annotation applies to a range of chars, typically unicode chars
 */
case object OffsetType {
  case object Lines extends OffsetType {
    val value = 0
    val name = "Lines"
  }
  case object Bytes extends OffsetType {
    val value = 1
    val name = "Bytes"
  }
  case object Chars extends OffsetType {
    val value = 2
    val name = "Chars"
  }

  /**
   * Find the enum by its integer value, as defined in the Thrift IDL.
   * @throws NoSuchElementException if the value is not found.
   */
  def apply(value: Int): OffsetType = {
    value match {
      case 0 => Lines
      case 1 => Bytes
      case 2 => Chars
      case _ => throw new NoSuchElementException(value.toString)
    }
  }

  /**
   * Find the enum by its integer value, as defined in the Thrift IDL.
   * Returns None if the value is not found
   */
  def get(value: Int): Option[OffsetType] = {
    value match {
      case 0 => scala.Some(Lines)
      case 1 => scala.Some(Bytes)
      case 2 => scala.Some(Chars)
      case _ => scala.None
    }
  }

  def valueOf(name: String): Option[OffsetType] = {
    name.toLowerCase match {
      case "lines" => scala.Some(OffsetType.Lines)
      case "bytes" => scala.Some(OffsetType.Bytes)
      case "chars" => scala.Some(OffsetType.Chars)
      case _ => scala.None
    }
  }
}


/**
 * Offset and OffsetType are used by Annotation to identify the
 * portion of a ContentItem that a human labeled with a tag.
 *
 * annotation applies to a range of line numbers
 *
 * annotation applies to a range of bytes
 *
 * annotation applies to a range of chars, typically unicode chars
 */
sealed trait OffsetType extends ThriftEnum with Serializable